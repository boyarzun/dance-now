{"ast":null,"code":"var _jsxFileName = \"/home/byron/Documents/dance-now/dance-now-reactjs/src/pages/Songs.js\";\nimport React from \"react\";\nimport SearchBar from \"./../components/SearchBar\";\nimport SongCard from \"./../components/SongCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet alphabet = [\"#\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\nfunction drawAlphabet() {\n  return alphabet.map(letter => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `#${letter}`,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 35\n  }, this));\n}\n\nexport default function Songs(props) {\n  let {\n    SongsList\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11 songs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          id: \"songs\",\n          children: drawSongsSection(Object.values(SongsList))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1 position-fixed alphabet\",\n        id: \"alphabet\",\n        children: drawAlphabet()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = Songs;\n\nfunction drawSongsSection(songs) {\n  return alphabet.map(letter => {\n    let songsFilteredByLetter = songs.filter(song => song.name[0] == letter);\n\n    if (songsFilteredByLetter.length) {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: letter,\n          children: letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), \"songsFilteredByLetter.map((song) => \", content.push( /*#__PURE__*/_jsxDEV(SongCard, {\n          Song: song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this)), \")\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this);\n    }\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/home/byron/Documents/dance-now/dance-now-reactjs/src/pages/Songs.js"],"names":["React","SearchBar","SongCard","alphabet","drawAlphabet","map","letter","Songs","props","SongsList","drawSongsSection","Object","values","songs","songsFilteredByLetter","filter","song","name","length","content","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,IAAIC,QAAQ,GAAG,CACb,GADa,EAEb,GAFa,EAGb,GAHa,EAIb,GAJa,EAKb,GALa,EAMb,GANa,EAOb,GAPa,EAQb,GARa,EASb,GATa,EAUb,GAVa,EAWb,GAXa,EAYb,GAZa,EAab,GAba,EAcb,GAda,EAeb,GAfa,EAgBb,GAhBa,EAiBb,GAjBa,EAkBb,GAlBa,EAmBb,GAnBa,EAoBb,GApBa,EAqBb,GArBa,EAsBb,GAtBa,EAuBb,GAvBa,EAwBb,GAxBa,EAyBb,GAzBa,EA0Bb,GA1Ba,EA2Bb,GA3Ba,EA4Bb,GA5Ba,CAAf;;AA+BA,SAASC,YAAT,GAAwB;AACtB,SAAOD,QAAQ,CAACE,GAAT,CAAcC,MAAD,iBAAY;AAAG,IAAA,IAAI,EAAG,IAAGA,MAAO,EAApB;AAAA,cAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAzB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,MAAI;AAAEC,IAAAA;AAAF,MAAgBD,KAApB;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,EAAE,EAAC,OAAxB;AAAA,oBACGE,gBAAgB,CAACC,MAAM,CAACC,MAAP,CAAcH,SAAd,CAAD;AADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAA+C,QAAA,EAAE,EAAC,UAAlD;AAAA,kBACGL,YAAY;AADf;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;KAxBuBG,K;;AA0BxB,SAASG,gBAAT,CAA0BG,KAA1B,EAAiC;AAC/B,SAAOV,QAAQ,CAACE,GAAT,CAAcC,MAAD,IAAY;AAC9B,QAAIQ,qBAAqB,GAAGD,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAU,CAAV,KAAgBX,MAAvC,CAA5B;;AAEA,QAAIQ,qBAAqB,CAACI,MAA1B,EAAkC;AAChC;AAAA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAI,UAAA,EAAE,EAAEZ,MAAR;AAAA,oBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,0CAGMa,OAAO,CAACC,IAAR,eAAa,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAb,CAHN,oBAKE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AASD;AACF,GAdM,CAAP;AAeD","sourcesContent":["import React from \"react\"\nimport SearchBar from \"./../components/SearchBar\"\nimport SongCard from \"./../components/SongCard\"\n\nlet alphabet = [\n  \"#\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"Ñ\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n]\n\nfunction drawAlphabet() {\n  return alphabet.map((letter) => <a href={`#${letter}`}>{letter}</a>)\n}\n\nexport default function Songs(props) {\n  let { SongsList } = props\n\n  return (\n    <section className=\"container-md\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <SearchBar />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-11 songs\">\n          <div className=\"row\" id=\"songs\">\n            {drawSongsSection(Object.values(SongsList))}\n          </div>\n        </div>\n\n        <div className=\"col-1 position-fixed alphabet\" id=\"alphabet\">\n          {drawAlphabet()}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nfunction drawSongsSection(songs) {\n  return alphabet.map((letter) => {\n    let songsFilteredByLetter = songs.filter((song) => song.name[0] == letter)\n\n    if (songsFilteredByLetter.length) {\n      <div className=\"row\">\n        <h1 id={letter}>{letter}</h1>\n        songsFilteredByLetter.map((song) => {\n            content.push(<SongCard Song={song} />)\n        })\n        <div className=\"col-12\">\n          <hr />\n        </div>\n      </div>\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}