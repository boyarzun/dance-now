{"ast":null,"code":"var _jsxFileName = \"/home/byron/Documents/dance-now/dance-now-reactjs/src/utils/utils.js\";\nimport { SongsList } from \"../songs/songs\";\nimport SongCard from \"./../components/SongCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet alphabet = [\"#\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\nexport function renderSongSections(songs) {\n  let songList = {};\n  songs.reduce((previousValue, currentValue) => {}, {});\n  let hola = songs.map(song => {\n    if (!Object.keys(songList).includes(song.name[0])) {\n      songList[song.name[0]] = [];\n    }\n\n    songList[song.name[0]].push(song);\n  });\n  console.log(\"hola\", songList);\n  return alphabet.map(letter => {\n    let songsFilteredByLetter = songs.filter(song => song.name[0] === letter);\n\n    if (songsFilteredByLetter.length) {\n      return getSongSection(songsFilteredByLetter, letter);\n    } else {\n      return \"There is no content available :(\";\n    }\n  });\n}\nexport function renderCategory(songs, title, id) {\n  let songsFilteredByCategoryId = songs.filter(song => song.category.includes(id));\n\n  if (songsFilteredByCategoryId.length) {\n    return getSongSection(songsFilteredByCategoryId, title);\n  }\n}\n\nfunction getSongSection(songs, title) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), songs.map((song, index) => {\n      return /*#__PURE__*/_jsxDEV(SongCard, {\n        Song: song\n      }, `song-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this);\n    })]\n  }, `section-${title}`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\nexport function drawAlphabet() {\n  return alphabet.map((letter, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `#${letter}`,\n    children: letter\n  }, `alphabet-${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this));\n}","map":{"version":3,"sources":["/home/byron/Documents/dance-now/dance-now-reactjs/src/utils/utils.js"],"names":["SongsList","SongCard","alphabet","renderSongSections","songs","songList","reduce","previousValue","currentValue","hola","map","song","Object","keys","includes","name","push","console","log","letter","songsFilteredByLetter","filter","length","getSongSection","renderCategory","title","id","songsFilteredByCategoryId","category","index","drawAlphabet"],"mappings":"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","sourcesContent":["import { SongsList } from \"../songs/songs\"\nimport SongCard from \"./../components/SongCard\"\nlet alphabet = [\n  \"#\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"Ñ\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n]\n\nexport function renderSongSections(songs) {\n  let songList = {}\n\n\n  songs.reduce((previousValue, currentValue) => {\n    \n  }, {})\n\n  let hola = songs.map((song) => {\n    if (!Object.keys(songList).includes(song.name[0])) {\n      songList[song.name[0]] = []\n    }\n\n    songList[song.name[0]].push(song)\n  })\n\n  console.log(\"hola\", songList)\n\n  return alphabet.map((letter) => {\n    let songsFilteredByLetter = songs.filter((song) => song.name[0] === letter)\n\n    if (songsFilteredByLetter.length) {\n      return getSongSection(songsFilteredByLetter, letter)\n    } else {\n      return \"There is no content available :(\"\n    }\n  })\n}\n\nexport function renderCategory(songs, title, id) {\n  let songsFilteredByCategoryId = songs.filter((song) =>\n    song.category.includes(id)\n  )\n\n  if (songsFilteredByCategoryId.length) {\n    return getSongSection(songsFilteredByCategoryId, title)\n  }\n}\n\nfunction getSongSection(songs, title) {\n  return (\n    <div key={`section-${title}`} className=\"row\">\n      <h1 id={title}>{title}</h1>\n      <div className=\"col-12\">\n        <hr />\n      </div>\n\n      {songs.map((song, index) => {\n        return <SongCard key={`song-${index}`} Song={song} />\n      })}\n    </div>\n  )\n}\n\nexport function drawAlphabet() {\n  return alphabet.map((letter, index) => (\n    <a key={`alphabet-${index}`} href={`#${letter}`}>\n      {letter}\n    </a>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}