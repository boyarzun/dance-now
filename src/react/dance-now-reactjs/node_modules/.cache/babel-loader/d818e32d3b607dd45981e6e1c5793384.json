{"ast":null,"code":"import{SongsList}from\"../songs/songs\";import SongCard from\"./../components/SongCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var alphabet=[\"#\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"Ñ\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"];export function renderSongSections(songs){var songsFilteredByLetter=songs.reduce(function(songList,song){if(!Object.keys(songList).includes(song.name[0])){songList[song.name[0]]=[];}songList[song.name[0]].push(song);return songList;},{});return Object.entries(songsFilteredByLetter).map(function(keyValue){return getSongSection(keyValue[1],keyValue[0]);});}export function renderCategory(songs,title,id){var songsFilteredByCategoryId=songs.filter(function(song){return song.category.includes(id);});if(songsFilteredByCategoryId.length){return getSongSection(songsFilteredByCategoryId,title);}}function getSongSection(songs,title){return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h1\",{id:title,children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"hr\",{})}),songs.map(function(song,index){return/*#__PURE__*/_jsx(SongCard,{Song:song},\"song-\".concat(index));})]},\"section-\".concat(title));}export function drawAlphabet(){return alphabet.map(function(letter,index){return/*#__PURE__*/_jsx(\"a\",{href:\"#\".concat(letter),children:letter},\"alphabet-\".concat(index));});}","map":{"version":3,"sources":["/home/byron/Documents/dance-now/src/react/dance-now-reactjs/src/utils/utils.js"],"names":["SongsList","SongCard","alphabet","renderSongSections","songs","songsFilteredByLetter","reduce","songList","song","Object","keys","includes","name","push","entries","map","keyValue","getSongSection","renderCategory","title","id","songsFilteredByCategoryId","filter","category","length","index","drawAlphabet","letter"],"mappings":"AAAA,OAASA,SAAT,KAA0B,gBAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,C,wFACA,GAAIC,CAAAA,QAAQ,CAAG,CACb,GADa,CAEb,GAFa,CAGb,GAHa,CAIb,GAJa,CAKb,GALa,CAMb,GANa,CAOb,GAPa,CAQb,GARa,CASb,GATa,CAUb,GAVa,CAWb,GAXa,CAYb,GAZa,CAab,GAba,CAcb,GAda,CAeb,GAfa,CAgBb,GAhBa,CAiBb,GAjBa,CAkBb,GAlBa,CAmBb,GAnBa,CAoBb,GApBa,CAqBb,GArBa,CAsBb,GAtBa,CAuBb,GAvBa,CAwBb,GAxBa,CAyBb,GAzBa,CA0Bb,GA1Ba,CA2Bb,GA3Ba,CA4Bb,GA5Ba,CAAf,CA+BA,MAAO,SAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACxC,GAAIC,CAAAA,qBAAqB,CAAGD,KAAK,CAACE,MAAN,CAAa,SAACC,QAAD,CAAWC,IAAX,CAAoB,CAC3D,GAAI,CAACC,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,QAAtB,CAA+BH,IAAI,CAACI,IAAL,CAAU,CAAV,CAA/B,CAAL,CAAmD,CACjDL,QAAQ,CAACC,IAAI,CAACI,IAAL,CAAU,CAAV,CAAD,CAAR,CAAyB,EAAzB,CACD,CAEDL,QAAQ,CAACC,IAAI,CAACI,IAAL,CAAU,CAAV,CAAD,CAAR,CAAuBC,IAAvB,CAA4BL,IAA5B,EAEA,MAAOD,CAAAA,QAAP,CACD,CAR2B,CAQzB,EARyB,CAA5B,CAUA,MAAOE,CAAAA,MAAM,CAACK,OAAP,CAAeT,qBAAf,EAAsCU,GAAtC,CAA0C,SAACC,QAAD,QAC/CC,CAAAA,cAAc,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAcA,QAAQ,CAAC,CAAD,CAAtB,CADiC,EAA1C,CAAP,CAGD,CAED,MAAO,SAASE,CAAAA,cAAT,CAAwBd,KAAxB,CAA+Be,KAA/B,CAAsCC,EAAtC,CAA0C,CAC/C,GAAIC,CAAAA,yBAAyB,CAAGjB,KAAK,CAACkB,MAAN,CAAa,SAACd,IAAD,QAC3CA,CAAAA,IAAI,CAACe,QAAL,CAAcZ,QAAd,CAAuBS,EAAvB,CAD2C,EAAb,CAAhC,CAIA,GAAIC,yBAAyB,CAACG,MAA9B,CAAsC,CACpC,MAAOP,CAAAA,cAAc,CAACI,yBAAD,CAA4BF,KAA5B,CAArB,CACD,CACF,CAED,QAASF,CAAAA,cAAT,CAAwBb,KAAxB,CAA+Be,KAA/B,CAAsC,CACpC,mBACE,aAA8B,SAAS,CAAC,KAAxC,wBACE,WAAI,EAAE,CAAEA,KAAR,UAAgBA,KAAhB,EADF,cAEE,YAAK,SAAS,CAAC,QAAf,uBACE,aADF,EAFF,CAMGf,KAAK,CAACW,GAAN,CAAU,SAACP,IAAD,CAAOiB,KAAP,CAAiB,CAC1B,mBAAO,KAAC,QAAD,EAAgC,IAAI,CAAEjB,IAAtC,iBAAuBiB,KAAvB,EAAP,CACD,CAFA,CANH,qBAAqBN,KAArB,EADF,CAYD,CAED,MAAO,SAASO,CAAAA,YAAT,EAAwB,CAC7B,MAAOxB,CAAAA,QAAQ,CAACa,GAAT,CAAa,SAACY,MAAD,CAASF,KAAT,qBAClB,UAA6B,IAAI,YAAME,MAAN,CAAjC,UACGA,MADH,qBAAoBF,KAApB,EADkB,EAAb,CAAP,CAKD","sourcesContent":["import { SongsList } from \"../songs/songs\"\nimport SongCard from \"./../components/SongCard\"\nlet alphabet = [\n  \"#\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"Ñ\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n]\n\nexport function renderSongSections(songs) {\n  let songsFilteredByLetter = songs.reduce((songList, song) => {\n    if (!Object.keys(songList).includes(song.name[0])) {\n      songList[song.name[0]] = []\n    }\n\n    songList[song.name[0]].push(song)\n\n    return songList\n  }, {})\n\n  return Object.entries(songsFilteredByLetter).map((keyValue) =>\n    getSongSection(keyValue[1], keyValue[0])\n  )\n}\n\nexport function renderCategory(songs, title, id) {\n  let songsFilteredByCategoryId = songs.filter((song) =>\n    song.category.includes(id)\n  )\n\n  if (songsFilteredByCategoryId.length) {\n    return getSongSection(songsFilteredByCategoryId, title)\n  }\n}\n\nfunction getSongSection(songs, title) {\n  return (\n    <div key={`section-${title}`} className=\"row\">\n      <h1 id={title}>{title}</h1>\n      <div className=\"col-12\">\n        <hr />\n      </div>\n\n      {songs.map((song, index) => {\n        return <SongCard key={`song-${index}`} Song={song} />\n      })}\n    </div>\n  )\n}\n\nexport function drawAlphabet() {\n  return alphabet.map((letter, index) => (\n    <a key={`alphabet-${index}`} href={`#${letter}`}>\n      {letter}\n    </a>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}